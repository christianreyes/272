class Chore < ActiveRecord::Base
    attr_accessible :id, :child_id, :task_id, :due_on, :completed
    
    belongs_to :child
    belongs_to :task
    
    validates_presence_of :id, :child_id, :task_id, :due_on, :completed
    
    scope :all, :order => "due_on"
    
    scope :upcoming, lambda { where("chores.due_on IS NOT NULL AND chores.due_on >= ?", 
     								Time.zone.now.strftime("%Y-%m-%d")) }
    
    scope :past, lambda { where("chores.due_on IS NOT NULL AND chores.due_on < ?", 
    									Time.zone.now.strftime("%Y-%m-%d")) }
    									
    scope :incomplete, :is => false
    
    scope :completed, :is => true
    
    def status
  		return "Pending" if !completed
  		"Completed"
    end
end
